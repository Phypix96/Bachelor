include("compress.jl")
using Plots
################################################################################
################################################################################
#tMPS

function tMPS(C,h,t,Δt::Float64,D::Int64=Inf)
    N=floor(t/Δt);
    d=size(C[1])[3];
    Op_1=expm(-im*h*Δt/2)
    Op_2=expm(-im*h*Δt)

    for j=1:div(size(C)[1]-1,2)
      (A,B)=operator_2bond(C[2*j-1],C[2*j],Op_1);
      C[2*j-1]=A
      C[2*j]=B
    end
    for i=1:N-1
        for j=1:div(size(C)[1]-1,2)
          (A,B)=operator_2bond(C[2*j],C[2*j+1],Op_2);
          C[2*j]=A
          C[2*j+1]=B
        end
        for j=1:div(size(C)[1]-1,2)
          (A,B)=operator_2bond(C[2*j-1],C[2*j],Op_2);
          C[2*j-1]=A
          C[2*j]=B
        end
        compress(C,D,direction="R")
        compress(C,D,direction="L")
    end

    for j=1:div(size(C)[1]-1,2)
      (A,B)=operator_2bond(C[2*j],C[2*j+1],Op_2);
      C[2*j]=A
      C[2*j+1]=B
    end
    for j=1:div(size(C)[1]-1,2)
      (A,B)=operator_2bond(C[2*j-1],C[2*j],Op_1);
      C[2*j-1]=A
      C[2*j]=B
    end
    compress(C,D,direction="R")
    compress(C,D,direction="L")
end



function operator_en(C,h,D::Int64=Inf)
  C2=Array{Any}(size(C)[1])
  d=size(C[1])[3];
  Op=complex(h)
  for j=1:size(C)[1]-1
    (A,B)=operator_2bond(C[j],C[j+1],Op);
    C2[j]=A
    C2[j+1]=B
  end
  compress(C2,D,direction="R")
  compress(C2,D,direction="L")
  return C2
end

function operator_2bond(A::Array{Complex128},B::Array{Complex128}, Op::Array{Complex128})
    (D1,D2,d)=size(A)
    (D1_B,D2_B,d)=size(B)
    P=complex(zeros(d^2,d^2))
    N1=complex(zeros(D1,d^2*D2,d))
    N2=complex(zeros(d^2*D1_B,D2_B,d))
    for i=1:d
      for j=1:d
        for l=1:d
          for k=1:d
            P[i*d+j-d, l*d+k-d] = Op[i*d+l-d, j*d+k-d]
          end
        end
      end
    end
    F=svdfact(P);
    U1=*(F[:U],diagm(sqrt(F[:S])));
    U2=*(diagm(sqrt(F[:S])),F[:Vt]);
    for σ=1:d
      for i=1:D1
        for j=1:D2
          for k=1:d^2
            for σi=1:d
              N1[i,k*D2+j-D2,σ] += U1[σ*d+σi-d,k]*A[i,j,σi];
            end
          end
        end
      end
    end
    for σ=1:d
      for i=1:D1_B
        for j=1:D2_B
          for k=1:d^2
            for σi=1:d
              N2[k*D1_B+i-D1_B,j,σ] += U2[k,σ*d+σi-d]*B[i,j,σi];
            end
          end
        end
      end
    end
    #U1=reshape(U1,1,d^2,d,d)
    #U2=reshape(U2,d^2,1,d,d)
    #N12=operator(A,U1)
    #N22=operator(B,U2)
    A=N1;
    B=N2;
    return (A,B)
end

function operator(A,H)
  (A1,A2,d)=size(A)
  (B1,B2)=size(H)[1:2]
  N=complex(zeros(B1*A1,B2*A2,d))
  for a1=1:A1
    for b1=1:B1
      for a2=1:A2
        for b2=1:B2
          for σ1=1:d
            for σ2=1:d
              N[b1*A1+a1-A1,b2*A2+a2-A2,σ1]+=H[b1,b2,σ1,σ2]*A[a1,a2,σ2]
            end
          end
        end
      end
    end
  end
  return N
end

function overlap(Φ,Ψ)
  overlap=1.;
  N=size(Ψ)[1]
  for i=1:N
    sum=0.
    for σ=1:size(Ψ[1])[3]
      sum += *(Φ[i][:,:,σ]',overlap,Ψ[i][:,:,σ])
    end
    overlap = sum
  end
  return overlap
end

################################################################################
################################################################################
#main

  L=11
  dim=50
  J=1
  Jz=1
  b=0;
  h=[-b/2+Jz/4 0 0 0; 0 -Jz/4 J/4 0; 0 J/4 -Jz/4 0; 0 0 0 Jz/4+b/2]
  H=reshape(h,1,1,4,4)
  Sz=[0.5 0;0 -0.5]
  S_p=[0 1;0 0]
  S_m=[0 0;1 0]
  Sz=reshape(Sz,1,1,2,2)
  S_p=reshape(S_p,1,1,2,2)
  S_m=reshape(S_m,1,1,2,2)
  A2=reshape(complex([0.;1.]),1,1,2)
  A1=reshape(complex([1.;0.]),1,1,2)
  spin=zeros(51)
  energ=zeros(51)
  site=6
  D=Array{Any}(L)
  D2=Array{Any}(L)
#  h=zeros(4,4)
  W1=zeros(1,5,2,2)
  W2=zeros(5,1,2,2)
  W=zeros(5,5,2,2)
  W[1,1,:,:]=eye(2,2)
  W[2,1,:,:]=S_p
  W[3,1,:,:]=S_m
  W[4,1,:,:]=Sz
  W[5,2,:,:]=J/2*S_m
  W[5,3,:,:]=J/2*S_p
  W[5,4,:,:]=Jz*Sz
  W[5,5,:,:]=eye(2,2)
  W1[:,:,:,:]=W[:,5,:,:]
  W2[:,:,:,:]=W[1,:,:,:]
  H=Any[W1,W,W,W,W,W,W,W,W,W2]

  for i=1:L
    if i%2==1
      D[i]=A2
    else
      D[i]=A1
    end
  end

for i=1:50
  for j=1:L
    D2[j]=D[j]
  end
  #D2=operator_en(D,h,dim)
  #compress(D2,dim,direction="R")
  #compress(D2,dim,direction="L")
  #spin[i]=real((overlap(D2,D)/overlap(D,D))[1])
  @time tMPS(D,h,0.4,0.2,dim)

  for j=1:L
    D2[j]=operator(D[j],H[j])
  end
  #D2=operator_en(D,h,20)
  #V=operator(D[6],Sz)
  compress(D2,50,direction="L")
  compress(D2,50,direction="R")
  #D2[6]=V
  energ[i]=real((overlap(D2,D)/overlap(D,D))[1])

  println(i,": ",spin[i])
end

for j=1:L
  D2[j]=D[j]
end
D2[site]=operator(D[site],h,dim)
#compress(D2,dim,direction="R")
#compress(D2,dim,direction="L")
spin[51]=real((overlap(D2,D)/overlap(D,D))[1])
print(spin)
x=linspace(0,0.5,51)
#plot(x,spin)

#Site 1
#t=1,Δt=0.1
spin1=[-0.5,-0.499346,-0.497383,-0.494117,-0.489554,-0.483706,-0.476586,-0.468214,-0.45861,-0.447799,-0.435811,-0.422677,-0.408431,-0.393113,-0.376764,-0.359427,-0.34115,-0.321982,-0.301976,-0.281185,-0.259667,-0.23748,-0.214684,-0.191342,-0.167516,-0.143272,-0.118674,-0.0937888,-0.0686838,-0.0434258,-0.0180826,0.00727851,0.03259,0.057785,0.0827969,0.10756,0.132009,0.15608,0.179711,0.202839,0.225404,0.247348,0.268615,0.289147,0.308893,0.327801,0.345822,0.362908,0.379016,0.394102,0.408128]
#t=0.4,Δt=0.2
spin2=[-0.5,-0.497508,-0.490057,-0.47772,-0.46062,-0.438928,-0.41286,-0.382677,-0.348682,-0.311213,-0.270646,-0.227388,-0.181871,-0.13455,-0.0858997,-0.0364055,0.0134375,0.0631315,0.11218,0.160094,0.206394,0.250619,0.292329,0.331106,0.366564,0.398348,0.426143,0.44967,0.468694,0.483024,0.492517,0.497077,0.496658,0.491263,0.480946,0.465808,0.446002,0.421725,0.393219,0.360769,0.324701,0.285374,0.243184,0.198552,0.151924,0.103768,0.0545645,0.00480601,-0.0450104,-0.0943873,-0.142832]
#t=1,Δt=0.5
spin3=[-0.5,-0.484639,-0.439435,-0.367171,-0.272433,-0.161272,-0.0407393,0.0816258,0.198292,0.302163,0.386933,0.447396,0.479734,0.481783,0.453252,0.395822,0.3131,0.210369,0.0941915,-0.0280958,-0.148894,-0.260813,-0.357066,-0.431802,-0.480396,-0.499728,-0.488434,-0.447072,-0.378173,-0.286098,-0.176727,-0.0570102,0.0655499,0.183395,0.289347,0.376979,0.440922,0.477156,0.483285,0.458759,0.404998,0.325362,0.224933,0.110129,-0.011784,-0.133214,-0.246719,-0.345412,-0.4233,-0.475579,-0.498914]


#Site 6
#t=1,Δt=0.1
spin1=[0.5,0.499099,0.496403,0.491931,0.485716,0.477801,0.468241,0.457098,0.444447,0.430368,0.414948,0.398278,0.380454,0.361574,0.341737,0.321042,0.299586,0.277465,0.25477,0.231589,0.208004,0.184095,0.159935,0.13559,0.111122,0.0865903,0.0620456,0.0375368,0.0131083,-0.0111981,-0.0353433,-0.0592893,-0.0829994,-0.106437,-0.129564,-0.152343,-0.174733,-0.196693,-0.218178,-0.23914,-0.259531,-0.279297,-0.298385,-0.316736,-0.334293,-0.350996,-0.366784,-0.381598,-0.395377,-0.408064,-0.419603]
#t=0.4,Δt=0.2
spin2=[0.5,0.497416,0.489695,0.476935,0.45929,0.436974,0.410249,0.379427,0.344855,0.306917,0.266021,0.222597,0.17709,0.129954,0.0816519,0.0326474,-0.0165943,-0.0656103,-0.113941,-0.161134,-0.206744,-0.250336,-0.29149,-0.3298,-0.364884,-0.396385,-0.423976,-0.447365,-0.466302,-0.480582,-0.490049,-0.494598,-0.494181,-0.488802,-0.478525,-0.463463,-0.443782,-0.419698,-0.391467,-0.359387,-0.323786,-0.285026,-0.243489,-0.199579,-0.153717,-0.106337,-0.0578819,-0.00880523,0.040434,0.0893721,0.137543]
#t=1,Δt=0.5
spin3=[0.5,0.481293,0.42788,0.346634,0.246382,0.135686,0.0214696,-0.0911013,-0.197739,-0.293913,-0.374262,-0.432955,-0.464873,-0.467004,-0.439357,-0.384915,-0.308633,-0.215997,-0.111889,-0.00036768,0.114563,0.227689,0.331721,0.417565,0.475926,0.499665,0.485884,0.436751,0.35871,0.260463,0.150713,0.0366344,-0.0764087,-0.18408,-0.281933,-0.364717,-0.42661,-0.462314,-0.468468,-0.44466,-0.393518,-0.319817,-0.229051,-0.126218,-0.0154612,0.0992782,0.213015,0.318749,0.407561,0.470052,0.498662]
